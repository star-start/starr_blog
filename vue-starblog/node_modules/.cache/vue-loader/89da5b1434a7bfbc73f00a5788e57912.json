{"remainingRequest":"F:\\Spring Boot\\STAR-BLOG\\vue-starblog\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\Spring Boot\\STAR-BLOG\\vue-starblog\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\Spring Boot\\STAR-BLOG\\vue-starblog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Spring Boot\\STAR-BLOG\\vue-starblog\\src\\view\\manage\\comment\\Comment.vue?vue&type=template&id=ac77e874&scoped=true&","dependencies":[{"path":"F:\\Spring Boot\\STAR-BLOG\\vue-starblog\\src\\view\\manage\\comment\\Comment.vue","mtime":1672399210835},{"path":"F:\\Spring Boot\\STAR-BLOG\\vue-starblog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1672420947809},{"path":"F:\\Spring Boot\\STAR-BLOG\\vue-starblog\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1672420953662},{"path":"F:\\Spring Boot\\STAR-BLOG\\vue-starblog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1672420947809},{"path":"F:\\Spring Boot\\STAR-BLOG\\vue-starblog\\node_modules\\vue-loader\\lib\\index.js","mtime":1672420951796}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}